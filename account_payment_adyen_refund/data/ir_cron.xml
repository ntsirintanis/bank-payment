<?xml version="1.0" encoding="utf-8" ?>
<odoo noupdate="1">

    <record id="cron_account_move_send_to_adyen" model="ir.cron">
        <field name="name">Account move: send payment to Adyen</field>
        <field name="model_id" ref="model_account_move" />
        <field name="state">code</field>
        <field name="code">
records =env["account.move"].search(
    [
        ("move_type", "=", "out_refund"),
        ("team_id.name", "=", "DS"),
        ('transaction_id', "!=", False ),
        ("refund_status", "=", "none"),
        ("invoice_date", ">=", "2023-11-10"),
        ("payment_state","=","not_paid"),
        ("state","=","posted"),
    ], limit=1, order="invoice_date asc")

for record in records:
  if record.currency_id.name == "GBP":
    journal = env["account.journal"].browse(30)
  else:
    journal = env["account.journal"].browse(29)
  payment_method = 7
  w=env["account.payment.register"].with_context(active_model="account.move",active_ids=record.ids).create({
    "journal_id": journal.id,
  })
  payments = w._create_payments()
  message = []
  for payment in payments:
    try:
      payment._check_adyen_refund_request()
      payment._send_adyen_refund_request()
    except UserError as e:
      message.append(str(e))
      continue
  if message:
    log("\n".join(message))
        </field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="interval_number">1</field>
        <field
            name="nextcall"
            eval="(datetime.now() + timedelta(days=1)).strftime('%Y-%m-%d 19:00:00')"
        />
    </record>

</odoo>
